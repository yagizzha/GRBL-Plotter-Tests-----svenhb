<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cBToolSet.Text" xml:space="preserve">
    <value>Übernehme Werte aus Werkzeugliste</value>
  </data>
  <data name="nUDToolOverlap.ToolTip" xml:space="preserve">
    <value>Abstand der Pfade in % (des Werkzeugdurchmessers) wenn Taschen gefräst werden</value>
  </data>
  <data name="label16.Text" xml:space="preserve">
    <value>Überlappung</value>
  </data>
  <data name="label16.ToolTip" xml:space="preserve">
    <value>Abstand der Pfade in % (des Werkzeugdurchmessers) wenn Taschen gefräst werden</value>
  </data>
  <data name="nUDToolFeedZ.ToolTip" xml:space="preserve">
    <value>Fahrgeschwindigkeit auf der Z Achse</value>
  </data>
  <data name="nUDToolFeedXY.ToolTip" xml:space="preserve">
    <value>Fahrgeschwindigkeit auf der XY Achse</value>
  </data>
  <data name="nUDToolZStep.ToolTip" xml:space="preserve">
    <value>Maximale Tiefenzustellung der Z-Achse pro Durchgang (nicht endgültige Tiefe)</value>
  </data>
  <data name="nUDToolDiameter.ToolTip" xml:space="preserve">
    <value>Werkzeugdurchmesser (Fräser, Laser, Stift) um Pfad-Offset berechnen zu können</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Durchmesser</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Werkzeug</value>
  </data>
  <data name="label19.Text" xml:space="preserve">
    <value>Höhe (Y)</value>
  </data>
  <data name="label18.Text" xml:space="preserve">
    <value>Breite (X)</value>
  </data>
  <data name="rBShape2.Text" xml:space="preserve">
    <value>Rechteck, runde Ecken</value>
  </data>
  <data name="rBShape1.Text" xml:space="preserve">
    <value>Rechteck</value>
  </data>
  <data name="rBShape3.Text" xml:space="preserve">
    <value>Kreis</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Form</value>
  </data>
  <data name="nUDImportGCZDown.ToolTip" xml:space="preserve">
    <value>Endgültige Tiefe der Form</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>Tiefe (Z)</value>
  </data>
  <data name="rBToolpath2.Text" xml:space="preserve">
    <value>Ausserhalb der Kontur</value>
  </data>
  <data name="rBToolpath3.Text" xml:space="preserve">
    <value>Innerhalb der Kontur</value>
  </data>
  <data name="rBToolpath1.Text" xml:space="preserve">
    <value>Auf der Kontur (Gravieren)</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Werkzeugpfad</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Maße</value>
  </data>
  <data name="cBToolpathPocket.Text" xml:space="preserve">
    <value>Tasche erzeugen</value>
  </data>
  <data name="btnApply.Text" xml:space="preserve">
    <value>Erzeuge G-Code</value>
  </data>
  <data name="groupBox5.Text" xml:space="preserve">
    <value>Nullpunkt</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Rechteck / Kreis</value>
  </data>
  <data name="rBBevel1.Text" xml:space="preserve">
    <value>Abrunden</value>
  </data>
  <data name="rBBevel2.Text" xml:space="preserve">
    <value>Fase</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Radius / Abstand</value>
  </data>
  <data name="groupBox6.Text" xml:space="preserve">
    <value>Kantenform</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Abschrägen / Abrunden</value>
  </data>
  <data name="groupBox7.Text" xml:space="preserve">
    <value>Tiefe</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Erzeuge G-Code aus Formen</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Radius</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Abweichung</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Breite</value>
  </data>
  <data name="rBRoundZXL.Text" xml:space="preserve">
    <value>Radius auf Z-X-links, Breite auf Y.</value>
  </data>
  <data name="rBRoundZYB.Text" xml:space="preserve">
    <value>Radius auf Z-Y-unten, Breite auf X.</value>
  </data>
  <data name="rBRoundZXR.Text" xml:space="preserve">
    <value>Radius auf Z-X-rechts, Breite auf Y.</value>
  </data>
  <data name="rBRoundZYT.Text" xml:space="preserve">
    <value>Radius auf Z-Y-oben, Breite auf X.</value>
  </data>
  <data name="tabPage3.Text" xml:space="preserve">
    <value>Abrundung Richtung Z</value>
  </data>
  <data name="cBMoveTo00.Text" xml:space="preserve">
    <value>Abschließend zu 0; 0 fahren</value>
  </data>
  <data name="nUDRZRadius.ToolTip" xml:space="preserve">
    <value>Radius in Z-Richtung</value>
  </data>
  <data name="nUDRZWidth.ToolTip" xml:space="preserve">
    <value>Breite der Runde</value>
  </data>
  <data name="nUDRZStep.ToolTip" xml:space="preserve">
    <value>Max. erlaubte Abweichung zu einem 1/4 Kreis in Einheiten</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Bahnberechnung für zylindrischen Fräser</value>
  </data>
  <data name="groupBox8.Text" xml:space="preserve">
    <value>Position zum Abrunden</value>
  </data>
  <data name="cBNoZUp.Text" xml:space="preserve">
    <value>Z-up vermeiden</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Werkzeug:</value>
  </data>
  <data name="CbInsertCode.Text" xml:space="preserve">
    <value>Form in 2D-Ansicht einfügen (an Position 0;0)</value>
  </data>
</root>